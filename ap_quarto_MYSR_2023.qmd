---
title: UNHCR Regional Trends Mid-2023 Forcibly Displaced and Stateless Persons
subtitle: Regional Bureau for Asia and the Pacific
format: unhcr-revealjs
embed-resources: true
page-layout: article
---

# Regional Overview {.slide-blue}

##

::: columns
::: {.column width="80%"}
![](\data-master\rbap_poc_bubble_map_mid2023.png){ width=900 height=600 align="middle"}
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br>[**14.3 million**]{.text-blue} <br>People UNHCR protects and/or assists in Asia-Pacific <br> <br>[**12.7 million**]{.text-blue} <br>Forcibly displaced in the region, including refugees, people in refugee-like situations, asylum-seekers and IDPs
:::
:::

##

::: columns
::: {.column width="80%"}
![](\data-master\rbap_poc_status_map_mid2023.png){ width=900 height=600 align="middle"}
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br>[**7.4 million**]{.text-blue} <br>Refugees, including people in refugee-like situations, and asylum-seekers in the region<br> <br>[**5.3 million**]{.text-blue} <br>IDPs in the region<br> <br>[**2.5 million**]{.text-blue} <br>Stateless persons in the region
:::
:::

## Trends in Last Decade

::: columns
::: {.column width="80%"}
```{r}
#| label: poc-trend-decade
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

library(refugees)
library(ggplot2)
library(unhcrthemes)
library(scales)
library(popdata)
library(tidyverse)
library(readxl)

##########2014-2022 Data from refugee package###############
pop <- refugees::population %>% filter(year > 2013)

reference <- read.csv("data-master/reference.csv")
reference <- reference %>% select(iso_3, UNHCRcode, ctryname, UNHCRBureau)

pop_reg <- merge(pop,reference, by.x = "coa", by.y = "UNHCRcode", all.x=T) %>% select(-iso_3, -ctryname)

pop_asia <- pop_reg %>% filter(UNHCRBureau == "Asia") %>% group_by(year,UNHCRBureau)%>% summarise(Refugees = sum(refugees), asylum_seekers = sum(asylum_seekers), IDPs = sum(idps), "Returnees (Refugee)" = sum(returned_refugees), "Returnees (IDP)" = sum(returned_idps), "Others of Concern" = sum(ooc))

ndp_sta_decade <- read_excel("data-master/ndp_sta_decade.xlsx")

pop_asia_decade <- pop_asia %>% merge(ndp_sta_decade, by = "year", all.x=T) %>% mutate("Refugees, Refugee-like and Asylum-Seekers" = Refugees + asylum_seekers) %>%  select(year,"Refugees, Refugee-like and Asylum-Seekers", IDPs, "Non-Displaced Stateless", "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

#############MYSR Data from function data-master folder################
load("data-master/Asia_2023_clean_data.Rdata")

mysr2023_asia <- Asia_2023_clean_data %>% mutate(Year = ifelse(Year == 2023, "mid-2023", Year)) %>% merge(reference, by.x = "asylum", by.y = "UNHCRcode", all.x=T) %>% select(Year, Refugees, Asylum_Seekers, IDPs, Returnee_Refugee, Returnee_IDP, Stateless_Total, Stateless_Displaced, OOC) %>% group_by(Year) %>% summarise("Refugees and refugee-like" = sum(Refugees, na.rm = TRUE), "Asylum-Seekers" = sum(Asylum_Seekers, na.rm = TRUE), IDPs = sum(IDPs, na.rm = TRUE), "Returnees (Refugee)" = sum(Returnee_Refugee, na.rm = TRUE), "Returnees (IDP)" = sum(Returnee_IDP, na.rm = TRUE), "Others of Concern" = sum(OOC, na.rm = TRUE), "Stateless" = sum(Stateless_Total, na.rm = TRUE), "Stateless_Displaced" = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate("Non-Displaced Stateless"= Stateless - Stateless_Displaced)
  
agg_mysr2023_asia <- mysr2023_asia %>% mutate("Refugees, Refugee-like and Asylum-Seekers"= mysr2023_asia[[2]]  + mysr2023_asia[[3]]) %>%  select(Year,"Refugees, Refugee-like and Asylum-Seekers", IDPs, "Non-Displaced Stateless", "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

colnames(agg_mysr2023_asia)[colnames(agg_mysr2023_asia) == "Year"] <- "year"

poc_2014_my2023_asia <- rbind(pop_asia_decade, agg_mysr2023_asia)

#########Graph POC Decade#######################
poc_2014_my2023_asia_long <- poc_2014_my2023_asia %>%  gather(key = "pop_type", value = "pop_figure", 2:7)
poc_2014_my2023_asia_long <- poc_2014_my2023_asia_long %>% mutate(pop_mil = pop_figure / 1000000)

poc_2014_my2023_asia_long$pop_type <- factor(poc_2014_my2023_asia_long$pop_type, levels = c("Others of Concern","Returnees (IDP)","Returnees (Refugee)","Non-Displaced Stateless","IDPs","Refugees, Refugee-like and Asylum-Seekers"))

sums <- poc_2014_my2023_asia_long %>%
  group_by(year) %>%
  summarise(total_poc = sum(pop_mil))

gg <- ggplot(poc_2014_my2023_asia_long) +
  geom_col(aes(x = year,
               y = pop_mil,
               fill = pop_type),
           width = 0.7)  +
  scale_fill_unhcr_d(palette = "pal_unhcr_poc",
                     nmax = 9,
                     order = c(8,6,9,5,4,1))+
  scale_y_continuous(breaks = pretty_breaks(n = 6), limits = c(0,14.5)) +
  scale_y_continuous(expand = expansion(c(0, 0.2))) +
  labs(title = "People UNHCR protects and/or assists in the Asia Pacific Region | 2014 -mid-2023",
       y = "Number of people (millions)") +
  theme_unhcr(grid = FALSE, axis_title = "y")

gg + geom_text(size=9, data = sums, aes(x = year, y = total_poc, label = round(total_poc, 1)), vjust = -0.5) + theme(text = element_text(size = 18))  
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br> - The total population UNHCR protects and/or assists in Asia and the Pacific remains at **14.3M** by mid-2023, the highest number on record according to available data. <br> <br> - This is a **65% increase** compared to end-2014 figure from almost a decade ago.
:::
:::

## Population figures in Asia-Pacific

::: columns
::: {.column width="80%"}
```{r}
#| label: poc-2022-mysr2023
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

load("data-master/Asia_2022_clean_data.Rdata")

asr2022_asia <- Asia_2022_clean_data %>% select(Year, Refugees, Asylum_Seekers, IDPs, Returnee_Refugee, Returnee_IDP, Stateless_Total, Stateless_Displaced, OOC) %>% group_by(Year) %>% summarise("Refugees and refugee-like" = sum(Refugees, na.rm = TRUE), "Asylum-Seekers" = sum(Asylum_Seekers, na.rm = TRUE), IDPs = sum(IDPs, na.rm = TRUE), "Returnees (Refugee)" = sum(Returnee_Refugee, na.rm = TRUE), "Returnees (IDP)" = sum(Returnee_IDP, na.rm = TRUE), "Others of Concern" = sum(OOC, na.rm = TRUE), "Stateless" = sum(Stateless_Total, na.rm = TRUE), "Stateless_Displaced" = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate("Non-Displaced Stateless"= Stateless - Stateless_Displaced)

asr2022_asia_poc <- asr2022_asia %>% select(Year,"Refugees and refugee-like", "Asylum-Seekers",IDPs, Stateless, "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

mysr2023_asia_poc <- mysr2023_asia %>% select(Year,"Refugees and refugee-like", "Asylum-Seekers",IDPs, Stateless, "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

mysr2023_asr2022_asia <- rbind(asr2022_asia_poc, mysr2023_asia_poc)

mysr2023_asr2022_asia_long <- mysr2023_asr2022_asia %>% gather(key = "pop_type", value = "pop_figure", 2:8)


ggplot(mysr2023_asr2022_asia_long) +
  geom_col(aes(x = pop_figure, 
    y = fct_rev(reorder(pop_type, -pop_figure)), 
    fill = as.character(Year)), 
    position = position_dodge(0.7), width = 0.6)+
    geom_text(aes(
      x = pop_figure,
      y = fct_rev(reorder(pop_type, -pop_figure)),
      group = as.character(Year),
      label = scales::comma(round(pop_figure,-2))),
      position = position_dodge(width = 0.7),
      hjust = -0.05, size = 6.5) +
    scale_fill_unhcr_d(palette = "pal_unhcr") +
    labs(title = "Population Categories in Asia-Pacific | 2022 - mid-2023",
    caption = "Note: Stateless persons have been included in both stateless and their respective displacement categories\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
    scale_x_continuous(labels = scales::comma, expand = expansion(c(0, 0.1))) +
    scale_y_discrete(labels = scales::label_wrap(17)) +
    theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") +
    theme(text = element_text(size = 18)) 
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br><br> - **6% increase** in the total number of forcibly displaced people compared to end-2022 <br> <br> - Refugees (including people in refugee-like situation) and asylum-seekers increased by 5% from 7M to 7.4M <br> <br> - IDPs increased to 5.3M, a **7% increase** from 5M at end-2022
:::
:::




# Refugees & People in Refugee-like Situations {.slide-blue}

## Refugees from Asia-Pacific

::: columns
::: {.column width="80%"}
```{r}
#| label: refugees-coo
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

load("data-master/Refugee_2023_clean_data.Rdata")
ref_mysr2023_disag <- Refugee_2023_clean_data

orig_asia_mysr_disag <- ref_mysr2023_disag %>% filter(region_o == "Asia") %>% group_by(originCountry) %>% summarise(Refugees = sum(Refugees, na.rm = TRUE), "Refugee-like" = sum(Refugee_like, na.rm = TRUE), sum_ref = sum(sum_ref, na.rm = TRUE))

top5_orig_asia_ref <- orig_asia_mysr_disag %>%
  arrange(desc(sum_ref)) %>%  
  slice_head(n = 5) 

top5_orig_asia_ref_long <- top5_orig_asia_ref %>% select(originCountry, Refugees, `Refugee-like`) %>% gather(key = "pop_type", value = "ref_figure", 2:3)

ggplot(top5_orig_asia_ref_long) +
  geom_col(aes(x = ref_figure,
               y = reorder(originCountry, ref_figure),
               fill = pop_type), width = 0.7) +
  geom_text(data = filter(top5_orig_asia_ref_long, ref_figure > 40000),
            aes(x = ref_figure,
                y = reorder(originCountry, ref_figure),
                group = pop_type,
                label = round(ref_figure / 1e6, 2)),
            position = position_stack(vjust = 0.75), size = 6) +
  labs(title = "Refugees and people in refugee-like situations from Asia-Pacific | mid-2023",
       subtitle = "Number of people (millions)",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  scale_fill_unhcr_d(palette = "pal_unhcr",
                     nmax = 10,
                     order = c(2, 1)) +
  theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") + theme(text = element_text(size = 20)) + theme(plot.subtitle=element_text(size=18))
```
:::

::: {.column style="width: 20%; font-size: 38%;"}
<br>-The Afghan refugee population (including those in refugee-like situations) continues to be the largest in the region with 5.6 million hosted in the region. <br><br>-Afghanistan overtook Ukraine to become the second largest country of origin of refugees (including refugee-like) globally, with 6.1 million hosted by 106 countries globally. <br><br>-Myanmar is the second largest country of origin of refugees (including refugee-like) in Asia-Pacific and the sixth largest globally. There are 1.27 million refugees and people in refugee-like situations from Myanmar. The vast majority (99.7%) are hosted within the region, with over three-quarters hosted in Bangladesh. 

:::
:::



## Refugees in Asia-Pacific

::: columns
::: {.column width="80%"}
```{r}
#| label: refugees-coa
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

asy_asia_mysr_disag <- ref_mysr2023_disag %>% filter(region_d == "Asia") %>% group_by(asylumCountry) %>% summarise(Refugees = sum(Refugees, na.rm = TRUE), "Refugee-like" = sum(Refugee_like, na.rm = TRUE), sum_ref = sum(sum_ref, na.rm = TRUE))

top5_asy_asia_ref <- asy_asia_mysr_disag %>%
  arrange(desc(sum_ref)) %>%  
  slice_head(n = 5)    

filt_top5_asy_asia_ref_long <- top5_asy_asia_ref %>% select(asylumCountry, Refugees, `Refugee-like`) %>% gather(key = "pop_type", value = "ref_figure", 2:3)

ggplot(filt_top5_asy_asia_ref_long) +
  geom_col(aes(x = ref_figure,
               y = reorder(asylumCountry, ref_figure),
               fill = pop_type),
           width = 0.7) +
  geom_text(data = filter(filt_top5_asy_asia_ref_long, ref_figure > 40000),
            aes(x = ref_figure,
                y = reorder(asylumCountry, ref_figure),
                group = pop_type,
                label = round(ref_figure / 1e6, 2)),
            position = position_stack(vjust = 0.45),
            size = 6) +
  labs(title = "Refugees and people in refugee-like situations hosted in Asia-Pacific | mid-2023",
       subtitle = "Number of people (millions)",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  scale_fill_unhcr_d(palette = "pal_unhcr",
                     nmax = 10,
                     order = c(2, 1)) +
  theme_unhcr(grid = FALSE,
              axis = "y",
              axis_title = FALSE,
              axis_text = "y") + theme(text = element_text(size = 20)) + theme(plot.subtitle=element_text(size=18))
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br>-The Islamic Republic of Iran and Türkiye each hosted 3.4 million refugees (including refugee-like), the largest populations worldwide. The vast majority of refugees and people in refugee-like situations in the Islamic Republic of Iran are Afghans.<br><br>-Pakistan is the fifth-largest refugee hosting country globally, with 2.1M refugees and people in refugee-like situations (almost all of whom are Afghans). <br><br>-Bangladesh is the tenth-largest refugee hosting country, with 961,800 refugees (mainly Rohingya).
:::
:::

# Asylum-Seekers {.slide-blue}

## Asylum-seekers from Asia-Pacific

::: columns
::: {.column width="70%"}
```{r}
#| label: asylum-seekers-coo
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

load("data-master/Global_2023_clean_data.Rdata")

coo_as_asia_mysr2023 <- Global_2023_clean_data %>% mutate(originCountry = replace(originCountry, originCountry %in% c("China, Hong Kong SAR","China, Macao SAR"),"China")) %>% mutate(asylumCountry = replace(asylumCountry, asylumCountry %in% c("China, Hong Kong SAR","China, Macao SAR"),"China")) %>% filter(region_o == "Asia") %>% group_by(originCountry) %>% summarise(Asylum_Seekers = sum(Asylum_Seekers, na.rm = TRUE)) 

top5_as_coo_asia_mysr2023 <- coo_as_asia_mysr2023 %>%
  arrange(desc(Asylum_Seekers)) %>%  
  slice_head(n = 5)

ggplot(top5_as_coo_asia_mysr2023) +
  geom_col(aes(
    x = Asylum_Seekers,
    y = reorder(originCountry, Asylum_Seekers)),
    fill = unhcr_pal(n = 1, "pal_blue"),
    width = 0.8) +
  geom_text(aes(
    x = Asylum_Seekers,
    y = reorder(originCountry, Asylum_Seekers),
    label = scales::comma(round(Asylum_Seekers, -2)),
    hjust = -0.1), size = 7) +
  labs(title = "Asylum-seekers globally by country of origin from Asia-Pacific | mid-2023",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(grid = FALSE,
              axis = "y",
              axis_title = FALSE,
              axis_text = "y")+
  guides(fill="none") + theme(text = element_text(size = 20))
```
:::

::: {.column style="width: 30%; font-size: 40%;"}
<br><br><br><br>Afghanistan (324,500) is by far the largest country of origin for asylum seekers from the Asia-Pacific region, followed by China (121,000), India (118,100), Iran (77,800) and Bangladesh (65,600).
:::
:::


## Asylum-seekers in Asia-Pacific

::: columns
::: {.column width="70%"}
```{r}
#| label: asylum-seekers-coa
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

coa_as_asia_mysr2023 <- Asia_2023_clean_data %>% mutate(originCountry = replace(originCountry, originCountry %in% c("China, Hong Kong SAR","China, Macao SAR"),"China")) %>% mutate(asylumCountry = replace(asylumCountry, asylumCountry %in% c("China, Hong Kong SAR","China, Macao SAR"),"China")) %>% group_by(asylumCountry) %>% summarise(Asylum_Seekers = sum(Asylum_Seekers, na.rm = TRUE))

top5_as_coo_asia_mysr2023 <- coa_as_asia_mysr2023 %>%
  arrange(desc(Asylum_Seekers)) %>%  
  slice_head(n = 5)

ggplot(top5_as_coo_asia_mysr2023) +
  geom_col(aes(
    x = Asylum_Seekers,
    y = reorder(asylumCountry, Asylum_Seekers)),
  fill = unhcr_pal(n = 1, "pal_blue"),
  width = 0.8) +
  geom_text(aes(
    x = Asylum_Seekers,
    y = reorder(asylumCountry, Asylum_Seekers),
    label = scales::comma(round(Asylum_Seekers, -2)),
  hjust = -0.1), size = 7) +
  labs(title = "Asylum-seekers by host country in Asia-Pacific | mid-2023",
    caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(grid = FALSE,
    axis = "y",
    axis_title = FALSE,
    axis_text = "y")+
  guides(fill="none") + theme(text = element_text(size = 20))
```
:::

::: {.column style="width: 30%; font-size: 35%;"}
<br><br><br><br>Given capacity constraints and limited protection value for refugee recognition, Pakistan does not conduct RSD for all asylum seekers, other than for those where there may be a protection dividend such as resettlement.<br><br>In Malaysia, the strategic use of Refugee Status Determination (RSD) is utilized. As a result, some asylum seekers from populations with a high presumption of eligibility are provided with UNHCR card/documentation, but a decision may never be issued owing to a lack of any additional protection value in conducting mandate RSD. Those cases that are identified for resettlement needs would have to undergo a mandate RSD, however.
:::
:::

# Internally Displaced Persons {.slide-blue}
## Internally Displaced Persons

::: columns
::: {.column width="50%"}
```{r}
#| label: idp
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

idp_asia_2019_mysr2023 <- poc_2014_my2023_asia %>% select(year, IDPs) %>% filter(year %in% c("2019","2020","2021","2022","mid-2023"))

ggplot(idp_asia_2019_mysr2023) +
  geom_line(aes(
    x = year,
    y = IDPs,
    group=1),
  size = 1,
  color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = IDPs,
    label = round(IDPs / 1e6, digits = 1),
    vjust = -1), size=9)+
  labs(title = "IDP trends in Asia-Pacific | 2019 - mid-2023",
    y = "Number of people (millions)",
    caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_y_continuous(limits= c(0, 5.5 * 1e6))+
  theme_unhcr(grid = FALSE,
    axis = "x",
    axis_title = "y",
    axis_text = "x") + theme(text = element_text(size = 25)) 
```
:::

::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

load("data-master/Asia_2022_clean_data.Rdata")

idp_asr2022_asia <- Asia_2022_clean_data %>% select(Year,asylumCountry, IDPs) %>% group_by(Year, asylumCountry) %>% summarise(IDPs = sum(IDPs, na.rm = TRUE)) %>% arrange(desc(IDPs)) %>% slice_head(n = 5)
idp_asr2022_asia$Year <- as.character(idp_asr2022_asia$Year)

idp_mysr2023_asia <- Asia_2023_clean_data %>% select(Year, asylumCountry,IDPs) %>% group_by(Year, asylumCountry) %>% summarise(IDPs = sum(IDPs, na.rm = TRUE)) %>% arrange(desc(IDPs)) %>% slice_head(n = 5) %>% mutate(Year = ifelse(Year == 2023, "mid-2023", Year))

idp_asr2022_mysr2023 <- rbind(idp_asr2022_asia, idp_mysr2023_asia)

ggplot(idp_asr2022_mysr2023) +
  geom_col(aes(x = IDPs, 
               y = fct_rev(reorder(asylumCountry, -IDPs)), 
               fill = as.character(Year)), 
           position = position_dodge(0.7), width = 0.6)+
  geom_text(aes(
    x = IDPs,
    y = fct_rev(reorder(asylumCountry, -IDPs)),
    group = as.character(Year),
    label = scales::comma(round(IDPs,-2))),
    position = position_dodge(width = 0.7),
    hjust = -0.03, size = 6.5) +
  scale_fill_unhcr_d(palette = "pal_unhcr") +
  labs(title = "Countries with the most conflict-induced IDPs in Asia-Pacific\n 2022 - mid-2023",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(labels = scales::comma, expand = expansion(c(0, 0.1))) +
  scale_y_discrete(labels = scales::label_wrap(17)) +
  theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") + theme(text = element_text(size = 25))
```

The newly displaced IDPs during the first half of 2023 were in Myanmar (443,000) and the Philippines (80,000).
:::
:::

# Solutions {.slide-blue}
## Solutions

::: columns
::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| label: solutions
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

solution_2019_my2023 <- poc_2014_my2023_asia %>% filter(year > 2018) %>% select(year,`Returnees (IDP)`, `Returnees (Refugee)`)

ggplot(solution_2019_my2023) +
  geom_line(aes(
    x = year,
    y = `Returnees (Refugee)`,
    group=1),
    size = 1,
    color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = `Returnees (Refugee)`,
    label = scales::comma(round(`Returnees (Refugee)`, -2)),
    vjust = -1), size = 9)+
  labs(title = "Voluntary Repatriation Trends | 2019 - mid-2023",
       y = "Number of people",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  theme_unhcr(grid = FALSE,
              axis = "x",
              axis_title = "y",
              axis_text = "x") + theme(text = element_text(size = 20))

```

During the first half of 2023, some 6,300 refugees returned to their country of origin in the region, including some 6,100 Afghans and some 240 Sri Lankans.
:::

::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| fig-align: right
#| fig-width: 8
#| fig-height: 7

ggplot(solution_2019_my2023) +
  geom_line(aes(
    x = year,
    y = `Returnees (IDP)`,
    group=1),
    size = 1,
    color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = `Returnees (IDP)`,
    label = scales::comma(round(`Returnees (IDP)`, -2)),
    vjust = -1), size=9)+
  labs(title = "IDP Returnees Trends | 2019 - mid-2023",
       y = "Number of people",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  theme_unhcr(grid = FALSE,
              axis = "x",
              axis_title = "y",
              axis_text = "x") + theme(text = element_text(size = 20)) 
```

During the first half of 2023, some 175,000 IDPs returned mainly in Myanmar (89,400) and the Philippines (82,900).
:::
:::

# Myanmar Situation {.slide-blue}
##
::: columns
::: {.column width="50%"}
<p style="text-align: center;">
<u>[**Global**]{.text-blue}</u></p>
<p style="text-align: center;">
[**3.16 million**]{.text-blue}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Forcibly displaced people from Myanmar globally</font></p><br>

<p style="text-align: center;">
[**1.27 million**]{.text-blue}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Refugees from Myanmar globally</font></p><br>

<p style="text-align: center;">
[**50k**]{.text-blue}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Asylum-seekers from Myanmar around the world</font></p><br>

<p style="text-align: center;">
[**1.85 million**]{.text-blue}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>IDPs in Myanmar</font></p>
:::

::: {.column width="50%"}
<p style="text-align: center;">
<u>[**Asia-Pacific Region**]{.text-blue}</u></p>
<p style="text-align: center;">
[**3.15 million**]{.text-blue} [**(99.7%)**]{.text-grey}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Forcibly displaced people from Myanmar in Asia-Pacific</font></p><br>

<p style="text-align: center;">
[**1.26 million**]{.text-blue} [**(99.7%)**]{.text-grey}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Refugees from Myanmar in Asia-Pacific</font></p><br>

<p style="text-align: center;">
[**44k**]{.text-blue} [**(88%)**]{.text-grey}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Asylum-seekers from Myanmar in Asia-Pacific</font></p><br>

<p style="text-align: center;">
[**1.85 million**]{.text-blue}</p>
<p style="text-align: center;line-height: 0.1"><font size=2px>IDPs in Myanmar</font></p>
:::
:::


## Myanmar Situation Population

::: columns
::: {.column width="80%"}
```{r}
#| label: myanmar-sit
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

mya_mysr2023 <- Asia_2023_clean_data %>% group_by(origin) %>% summarise("Refugees and refugee-like" = sum(Refugees, na.rm = TRUE), "Asylum-Seekers" = sum(Asylum_Seekers, na.rm = TRUE), IDPs = sum(IDPs, na.rm = TRUE), "Returnees (Refugee)" = sum(Returnee_Refugee, na.rm = TRUE), "Returnees (IDP)" = sum(Returnee_IDP, na.rm = TRUE), "Others of Concern" = sum(OOC, na.rm = TRUE), "Stateless" = sum(Stateless_Total, na.rm = TRUE), 'Stateless_Displaced' = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate("Non-Displaced Stateless"= Stateless - Stateless_Displaced) %>% filter(origin == "MYA")

colnames(mya_mysr2023)[colnames(mya_mysr2023) == "Stateless_Displaced"] <- "Displaced Stateless"

mya_mysr2023 <- mya_mysr2023 %>% select(IDPs, 'Non-Displaced Stateless','Displaced Stateless', 'Refugees and refugee-like','Returnees (IDP)', 'Asylum-Seekers')

mya_mysr2023_long <- mya_mysr2023 %>%
  gather(key = "pop_type", value = "pop_figure")

mya_mysr2023_long$stack <- ifelse(mya_mysr2023_long$pop_type %in% c('Non-Displaced Stateless','Displaced Stateless'), "Stateless", mya_mysr2023_long$pop_type)

custom_order<- c("Asylum-Seekers", "Returnees (IDP)", "Refugees and refugee-like", 'Displaced Stateless', "Non-Displaced Stateless", "IDPs")
custom_order_stack <- c("Asylum-Seekers", "Returnees (IDP)", "Refugees and refugee-like", "Stateless", "IDPs")
mya_mysr2023_long$stack <- factor(mya_mysr2023_long$stack, levels = custom_order_stack)
mya_mysr2023_long$pop_type <- factor(mya_mysr2023_long$pop_type, levels = custom_order)

ggplot(mya_mysr2023_long) +
  geom_col(aes(x = pop_figure,
               y = stack,
               fill = pop_type), width = 0.7, position = "stack") +
  geom_text(aes(x = pop_figure,
                y =stack,
                label = round(pop_figure / 1e6, 2)),
            position = position_stack(vjust = 0.8), size=7) +
  labs(title = "Myanmar Situation | mid-2023",
       subtitle = "Number of people (millions)",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  scale_fill_manual(values = c('Refugees and refugee-like' = "#0072BC", 'Asylum-Seekers' = "#0072BC", IDPs = "#0072BC", 'Non-Displaced Stateless' = "#0072BC", 'Returnees (IDP)' = "#0072BC", 'Displaced Stateless' = "#CCCCCC"), breaks = 'Displaced Stateless') +
  theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") + theme(text = element_text(size = 20)) + theme(plot.subtitle=element_text(size=18))
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br><br><br>

<p style="text-align: center;">[**3.7 million**]{.text-blue}</p>
People with and for whom UNHCR works from Myanmar in Asia and the Pacific region
:::
:::


# Afghanistan Situation {.slide-blue}
##
::: columns
::: {.column width="33%"}
<p style="text-align: center;">
<u><font size=6px>[**Global**]{.text-blue}</font></u></p>
<p style="text-align: center;">
<font size=6px>[**9.7 million**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Forcibly displaced Afghans globally</font></p><br>

<p style="text-align: center;">
<font size=6px>[**6.1 million**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan refugees and people in refugee-like situations globally</font></p><br>

<p style="text-align: center;">
<font size=6px>[**325k**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan asylum-seekers around the world</font></p><br>

<p style="text-align: center;">
<font size=6px>[**3.25 million**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan IDPs</font></p>
:::

::: {.column width="34%"}
<p style="text-align: center;">
<font size=6px><u>[**Asia-Pacific Region**]{.text-blue}</font></u></p>
<p style="text-align: center;">
<font size=6px>[**8.9 million**]{.text-blue} [**(92%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Forcibly displaced Afghans are in Asia-Pacific</font></p><br>

<p style="text-align: center;">
<font size=6px>[**5.56 million**]{.text-blue} [**(91%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan refugees and people in refugee-like situations in Asia-Pacific</font></p><br>

<p style="text-align: center;">
<font size=6px>[**59k**]{.text-blue} [**(18%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan asylum-seekers in Asia-Pacific</font></p><br>

<p style="text-align: center;">
<font size=6px>[**3.25 million**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan IDPs</font></p>
:::

::: {.column width="33%"}
<p style="text-align: center;">
<u><font size=6px>[**South-West Asia**]{.text-blue}</font></u></p>
<p style="text-align: center;">
<font size=6px>[**8.8 million**]{.text-blue} [**(91%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Forcibly displaced Afghans are in South-West Asia</font></p><br>

<p style="text-align: center;">
<font size=6px>[**5.51 million**]{.text-blue} [**(90%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan refugees and people in refugee-like situations in South-West Asia</font></p><br>

<p style="text-align: center;">
<font size=6px>[**49k**]{.text-blue} [**(15%)**]{.text-grey}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan asylum-seekers in South-West Asia</font></p><br>

<p style="text-align: center;">
<font size=6px>[**3.25 million**]{.text-blue}</font></p>
<p style="text-align: center;line-height: 0.1"><font size=2px>Afghan IDPs</font></p>

:::
:::

# Statelessness {.slide-blue}

##
![](\data-master\rbap_poc_status_map_mid2023.png){ width=950 height=650 align="middle"}

## 
::: columns
::: {.column width="50%"}
```{r}
#| label: non-displaced-stateless
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

stateless_mysr2023_asia <- Asia_2023_clean_data %>% mutate(Year = ifelse(Year == 2023, "mid-2023", Year)) %>% group_by(Year,asylumCountry) %>% summarise(Stateless_Total = sum(Stateless_Total, na.rm = TRUE), Stateless_Displaced = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate(Stateless_NDP = Stateless_Total - Stateless_Displaced) %>% select(Year, asylumCountry, Stateless_Total, Stateless_NDP, Stateless_Displaced) 

top5_ndp_stateless_asia_mysr2023 <- stateless_mysr2023_asia %>% select(Year, asylumCountry, Stateless_NDP) %>% arrange(desc(Stateless_NDP)) %>% slice_head(n = 5)

top5_dis_stateless_asia_mysr2023 <- stateless_mysr2023_asia %>% select(Year, asylumCountry, Stateless_Displaced) %>% arrange(desc(Stateless_Displaced)) %>% slice_head(n = 5)

ggplot(top5_ndp_stateless_asia_mysr2023) +
  geom_col(aes(
    x = Stateless_NDP,
    y = reorder(asylumCountry, Stateless_NDP)),
    fill = unhcr_pal(n = 1, "pal_blue"),
    width = 0.8) +
  geom_text(aes(
    x = Stateless_NDP,
    y = reorder(asylumCountry, Stateless_NDP),
    label = scales::comma(round(Stateless_NDP, -2)),
    hjust = -0.05), size=8.5) +
  labs(title = "Top Countries with Non-Displaced Stateless Persons in Asia-Pacific\nmid-2023",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(grid = FALSE,
              axis = "y",
              axis_title = FALSE,
              axis_text = "y")+
  guides(fill="none") + theme(text = element_text(size = 25)) + theme(plot.subtitle=element_text(size=18))
```
:::
::: {.column width="50%"}

```{r}
#| label: displaced-stateless
#| fig-align: right
#| fig-width: 8
#| fig-height: 7

ggplot(top5_dis_stateless_asia_mysr2023) +
  geom_col(aes(
    x = Stateless_Displaced,
    y = reorder(asylumCountry, Stateless_Displaced)),
    fill = unhcr_pal(n = 1, "pal_blue"),
    width = 0.8) +
  geom_text(aes(
    x = Stateless_Displaced,
    y = reorder(asylumCountry, Stateless_Displaced),
    label = scales::comma(round(Stateless_Displaced, -2)),
    hjust = -0.05), size=8.5) +
  labs(title = "Top Countries with Displaced Stateless Persons in Asia-Pacific\nmid-2023",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(grid = FALSE,
              axis = "y",
              axis_title = FALSE,
              axis_text = "y")+
  guides(fill="none") + theme(text = element_text(size = 25)) + theme(plot.subtitle=element_text(size=18))
```

:::
:::


## UNHCR helpers

**Text**

-   Use `{.text-blue}` to apply [UNHCR blue]{.text-blue} color
-   Use `{.text-grey}` for [lighter text]{.text-grey} color

**Background**

-   Use `{.bg-blue}` for [light blue]{.bg-blue} background
-   Use `{.bg-grey}` for [light grey]{.bg-grey} background

::: aside
For dark background slides use `{.text-yellow}` and `{.bg-yellow}` classes
:::

## Columns

-   To create columns, use a `div` container with class `{.columns}`, containing two or more `div` containers with class `{.column}` and a `width` attribute. For example:

```{markdown}
#| echo: true

:::: {.columns}

::: {.column width="40%"}
Left column
:::

::: {.column width="60%"}
Right column
:::

::::
```

## Images

-   To insert an image, use the Markdown image syntax. For example:

```{markdown}
#| echo: true
![](path/to/image.jpg)
```

![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/cover-example.jpg)

## Code

-   To include code, use fenced code blocks with a language specifier.
-   By default the `echo` parameter of code block is set to `false`, turn it to `true` to see the code and the result.

```{markdown}
#| echo: true

\```{r}
#| echo: true
#| warning: false
#| remotes::install_github("vidonne/unhcrthemes")
library(tidyverse)
library(unhcrthemes)
\```

```

## Plots

-   Use the [`{unhcrthemes}`](https://vidonne.github.io/unhcrthemes/) package to produce UNHCR branded plots directly in the presentation. For example:

```{r}
#| label: idp-plot
#| fig-align: center

library(tidyverse)
library(unhcrthemes)

data(idp, package = "unhcrthemes")

idp_total <- idp |>
  group_by(year) |>
  summarise(idp = sum(idp, na.rm = TRUE) / 1e6) |>
  ungroup()

ggplot(idp_total) +
  geom_col(aes(x = year, y = idp),
           fill = unhcr_pal(n = 1, "pal_blue"),
           width = 0.8) +
  labs(title = "Globalement IDP displacement | 2010 - 2019",
       y = "Number of people (in million)",
       caption = "Source: UNHCR Refugee Data Finder") +
  scale_y_continuous(expand = expansion(c(0, 0.1))) +
  scale_x_continuous(breaks = seq(2010, 2019, 1)) +
  theme_unhcr(font_size = 18, grid = "Y", axis_title = "y")
```

## Tables

-   Use `knitr::kable()` function for simple table. For example:

::: columns
::: {.column width="55%"}
```{r}
#| label: kable-ex
#| echo: true
#| eval: false
knitr::kable(head(idp_total)) 
```
:::

::: {.column width="45%"}
```{r}
#| label: kable-ex
#| eval: true
```
:::
:::

## More tables

-   Many packages can help you stylize tables, like `{gt}`, `{dt}` and more.
-   Use them to customize further the table design in your presentations.

::: columns
::: {.column width="50%"}
```{r}
#| label: gt-ex
#| echo: true
#| eval: false
gt::gt(head(idp_total)) 
```
:::

::: {.column width="50%"}
```{r}
#| label: gt-ex
#| eval: true
```
:::
:::

## Speaker Notes:

-   You can add speaker notes to your slides that are only visible to the presenter during the presentation.
-   To add speaker notes, use the following syntax:

```{markdown}
#| echo: true

## Slide with speaker notes

Slide content

::: {.notes}
Speaker notes go here.
:::

```

## Exporting into PDF

-   Toggle into Print View using the `E` key (or using the [Navigation Menu](https://quarto.org/docs/presentations/revealjs/presenting.html#navigation-menu)).
-   Open the in-browser print dialog (CTRL/CMD+P).
-   Change the destination setting to **Save as PDF**.
-   Find more info on the print to PDF settings [here](https://quarto.org/docs/presentations/revealjs/presenting.html#print-to-pdf).

## More Information

You can learn more about controlling the appearance and layout of RevealJS output here: <https://quarto.org/docs/presentations/revealjs/>

# Thank you {.slide-blue}

