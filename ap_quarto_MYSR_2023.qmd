---
title: UNHCR Regional Trends Mid-2023 Forcibly Displaced and Stateless Persons
subtitle: Regional Bureau for Asia and the Pacific
format: unhcr-revealjs
embed-resources: true
page-layout: article
---

# Regional Overview {.slide-blue}

## Trends in Last Decade

::: columns
::: {.column width="80%"}
```{r}
#| label: poc-trend-decade
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

library(refugees)
library(ggplot2)
library(unhcrthemes)
library(scales)
library(popdata)
library(tidyverse)
library(readxl)

##########2014-2022 Data from refugee package###############
pop <- refugees::population %>% filter(year > 2013)

reference <- read.csv("data-master/reference.csv")
reference <- reference %>% select(iso_3, UNHCRcode, ctryname, UNHCRBureau)

pop_reg <- merge(pop,reference, by.x = "coa", by.y = "UNHCRcode", all.x=T) %>% select(-iso_3, -ctryname)

pop_asia <- pop_reg %>% filter(UNHCRBureau == "Asia") %>% group_by(year,UNHCRBureau)%>% summarise(Refugees = sum(refugees), asylum_seekers = sum(asylum_seekers), IDPs = sum(idps), "Returnees (Refugee)" = sum(returned_refugees), "Returnees (IDP)" = sum(returned_idps), "Others of Concern" = sum(ooc))

ndp_sta_decade <- read_excel("data-master/ndp_sta_decade.xlsx")

pop_asia_decade <- pop_asia %>% merge(ndp_sta_decade, by = "year", all.x=T) %>% mutate("Refugees, Refugee-like and Asylum-Seekers" = Refugees + asylum_seekers) %>%  select(year,"Refugees, Refugee-like and Asylum-Seekers", IDPs, "Non-Displaced Stateless", "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

#############MYSR Data from function data-master folder################
load("data-master/Asia_2023_clean_data.Rdata")

mysr2023_asia <- Asia_2023_clean_data %>% mutate(Year = ifelse(Year == 2023, "mid-2023", Year)) %>% merge(reference, by.x = "asylum", by.y = "UNHCRcode", all.x=T) %>% select(Year, Refugees, Asylum_Seekers, IDPs, Returnee_Refugee, Returnee_IDP, Stateless_Total, Stateless_Displaced, OOC) %>% group_by(Year) %>% summarise("Refugees and refugee-like" = sum(Refugees, na.rm = TRUE), "Asylum-Seekers" = sum(Asylum_Seekers, na.rm = TRUE), IDPs = sum(IDPs, na.rm = TRUE), "Returnees (Refugee)" = sum(Returnee_Refugee, na.rm = TRUE), "Returnees (IDP)" = sum(Returnee_IDP, na.rm = TRUE), "Others of Concern" = sum(OOC, na.rm = TRUE), "Stateless" = sum(Stateless_Total, na.rm = TRUE), "Stateless_Displaced" = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate("Non-Displaced Stateless"= Stateless - Stateless_Displaced)
  
agg_mysr2023_asia <- mysr2023_asia %>% mutate("Refugees, Refugee-like and Asylum-Seekers"= mysr2023_asia[[2]]  + mysr2023_asia[[3]]) %>%  select(Year,"Refugees, Refugee-like and Asylum-Seekers", IDPs, "Non-Displaced Stateless", "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

colnames(agg_mysr2023_asia)[colnames(agg_mysr2023_asia) == "Year"] <- "year"

poc_2014_my2023_asia <- rbind(pop_asia_decade, agg_mysr2023_asia)

#########Graph POC Decade#######################
poc_2014_my2023_asia_long <- poc_2014_my2023_asia %>%  gather(key = "pop_type", value = "pop_figure", 2:7)
poc_2014_my2023_asia_long <- poc_2014_my2023_asia_long %>% mutate(pop_mil = pop_figure / 1000000)

poc_2014_my2023_asia_long$pop_type <- factor(poc_2014_my2023_asia_long$pop_type, levels = c("Others of Concern","Returnees (IDP)","Returnees (Refugee)","Non-Displaced Stateless","IDPs","Refugees, Refugee-like and Asylum-Seekers"))

sums <- poc_2014_my2023_asia_long %>%
  group_by(year) %>%
  summarise(total_poc = sum(pop_mil))

gg <- ggplot(poc_2014_my2023_asia_long) +
  geom_col(aes(x = year,
               y = pop_mil,
               fill = pop_type),
           width = 0.7)  +
  scale_fill_unhcr_d(palette = "pal_unhcr_poc",
                     nmax = 9,
                     order = c(8,6,9,5,4,1))+
  scale_y_continuous(breaks = pretty_breaks(n = 6), limits = c(0,14.5)) +
  scale_y_continuous(expand = expansion(c(0, 0.2))) +
  labs(title = "People UNHCR protects and/or assists in the Asia Pacific Region | 2014 -mid-2023",
       y = "Number of people (millions)") +
  theme_unhcr(grid = FALSE, axis_title = "y")

gg + geom_text(size=9, data = sums, aes(x = year, y = total_poc, label = round(total_poc, 1)), vjust = -0.5) + theme(text = element_text(size = 18))  
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br> - The total population UNHCR protects and/or assists in Asia and the Pacific remains at **14.3M** by mid-2023, the highest number on record according to available data. <br> <br> - This is a **65% increase** compared to end-2014 figure from almost a decade ago.
:::
:::

## Population figures in Asia-Pacific

::: columns
::: {.column width="80%"}
```{r}
#| label: poc-2022-mysr2023
#| fig-align: left
#| fig-width: 8
#| fig-height: 6

load("data-master/Asia_2022_clean_data.Rdata")

asr2022_asia <- Asia_2022_clean_data %>% select(Year, Refugees, Asylum_Seekers, IDPs, Returnee_Refugee, Returnee_IDP, Stateless_Total, Stateless_Displaced, OOC) %>% group_by(Year) %>% summarise("Refugees and refugee-like" = sum(Refugees, na.rm = TRUE), "Asylum-Seekers" = sum(Asylum_Seekers, na.rm = TRUE), IDPs = sum(IDPs, na.rm = TRUE), "Returnees (Refugee)" = sum(Returnee_Refugee, na.rm = TRUE), "Returnees (IDP)" = sum(Returnee_IDP, na.rm = TRUE), "Others of Concern" = sum(OOC, na.rm = TRUE), "Stateless" = sum(Stateless_Total, na.rm = TRUE), "Stateless_Displaced" = sum(Stateless_Displaced, na.rm = TRUE)) %>% mutate("Non-Displaced Stateless"= Stateless - Stateless_Displaced)

asr2022_asia_poc <- asr2022_asia %>% select(Year,"Refugees and refugee-like", "Asylum-Seekers",IDPs, Stateless, "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

mysr2023_asia_poc <- mysr2023_asia %>% select(Year,"Refugees and refugee-like", "Asylum-Seekers",IDPs, Stateless, "Returnees (Refugee)", "Returnees (IDP)", "Others of Concern")

mysr2023_asr2022_asia <- rbind(asr2022_asia_poc, mysr2023_asia_poc)

mysr2023_asr2022_asia_long <- mysr2023_asr2022_asia %>% gather(key = "pop_type", value = "pop_figure", 2:8)


ggplot(mysr2023_asr2022_asia_long) +
  geom_col(aes(x = pop_figure, 
    y = fct_rev(reorder(pop_type, -pop_figure)), 
    fill = as.character(Year)), 
    position = position_dodge(0.7), width = 0.6)+
    geom_text(aes(
      x = pop_figure,
      y = fct_rev(reorder(pop_type, -pop_figure)),
      group = as.character(Year),
      label = scales::comma(round(pop_figure,-2))),
      position = position_dodge(width = 0.7),
      hjust = -0.05, size = 6.5) +
    scale_fill_unhcr_d(palette = "pal_unhcr") +
    labs(title = "Population Categories in Asia-Pacific | 2022 - mid-2023",
    caption = "Note: Stateless persons have been included in both stateless and their respective displacement categories\nSource: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
    scale_x_continuous(labels = scales::comma, expand = expansion(c(0, 0.1))) +
    scale_y_discrete(labels = scales::label_wrap(17)) +
    theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") +
    theme(text = element_text(size = 18)) 
```
:::

::: {.column style="width: 20%; font-size: 40%;"}
<br><br><br> - **6% increase** in the total number of forcibly displaced people compared to end-2022 <br> <br> - Refugees (including people in refugee-like situation) and asylum-seekers increased by 5% from 7M to 7.4M <br> <br> - IDPs increased to 5.3M, a **7% increase** from 5M at end-2022
:::
:::

## Map of population stats by country

::: columns
::: {.column width="80%"}
![](\data-master\rbap_poc_bubble_map_mid2023.png)
:::
::: {.column style="width: 20%; font-size: 40%;"}
<br><br>**14.3 million** people UNHCR protects and/or assists in Asia-Pacific <br> <br>**12.7 million** are forcibly displaced in the region, including refugees, people in refugee-like situations, asylum-seekers and IDPs
:::
:::

## Solutions

::: columns
::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| label: solutions
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

solution_2019_my2023 <- poc_2014_my2023_asia %>% filter(year > 2018) %>% select(year,`Returnees (IDP)`, `Returnees (Refugee)`)

ggplot(solution_2019_my2023) +
  geom_line(aes(
    x = year,
    y = `Returnees (Refugee)`,
    group=1),
    size = 1,
    color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = `Returnees (Refugee)`,
    label = scales::comma(round(`Returnees (Refugee)`, -2)),
    vjust = -1), size = 9)+
  labs(title = "Voluntary Repatriation Trends | 2019 - mid-2023",
       y = "Number of people",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  theme_unhcr(grid = FALSE,
              axis = "x",
              axis_title = "y",
              axis_text = "x") + theme(text = element_text(size = 20))

```

During the first half of 2023, some 6,300 refugees returned to their country of origin in the region, including some 6,100 Afghans and some 240 Sri Lankans.
:::

::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| fig-align: right
#| fig-width: 8
#| fig-height: 7

ggplot(solution_2019_my2023) +
  geom_line(aes(
    x = year,
    y = `Returnees (IDP)`,
    group=1),
    size = 1,
    color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = `Returnees (IDP)`,
    label = scales::comma(round(`Returnees (IDP)`, -2)),
    vjust = -1), size=9)+
  labs(title = "IDP Returnees Trends | 2019 - mid-2023",
       y = "Number of people",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  theme_unhcr(grid = FALSE,
              axis = "x",
              axis_title = "y",
              axis_text = "x") + theme(text = element_text(size = 20)) 
```

During the first half of 2023, some 175,000 IDPs returned mainly in Myanmar (89,400) and the Philippines (82,900).
:::
:::

## Internally Displaced Persons

::: columns
::: {.column width="50%"}
```{r}
#| label: idp
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

idp_asia_2019_mysr2023 <- poc_2014_my2023_asia %>% select(year, IDPs) %>% filter(year %in% c("2019","2020","2021","2022","mid-2023"))

ggplot(idp_asia_2019_mysr2023) +
  geom_line(aes(
    x = year,
    y = IDPs,
    group=1),
  size = 1,
  color = unhcr_pal(n = 1, "pal_blue")) +
  geom_text(aes(
    x = year,
    y = IDPs,
    label = round(IDPs / 1e6, digits = 1),
    vjust = -1), size=9)+
  labs(title = "IDP trends in Asia-Pacific | 2019 - mid-2023",
    y = "Number of people (millions)",
    caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_y_continuous(limits= c(0, 5.5 * 1e6))+
  theme_unhcr(grid = FALSE,
    axis = "x",
    axis_title = "y",
    axis_text = "x") + theme(text = element_text(size = 25)) 
```
:::

::: {.column style="width: 50%; font-size: 40%;"}
```{r}
#| fig-align: left
#| fig-width: 8
#| fig-height: 7

load("data-master/Asia_2022_clean_data.Rdata")

idp_asr2022_asia <- Asia_2022_clean_data %>% select(Year,asylumCountry, IDPs) %>% group_by(Year, asylumCountry) %>% summarise(IDPs = sum(IDPs, na.rm = TRUE)) %>% arrange(desc(IDPs)) %>% slice_head(n = 5)
idp_asr2022_asia$Year <- as.character(idp_asr2022_asia$Year)

idp_mysr2023_asia <- Asia_2023_clean_data %>% select(Year, asylumCountry,IDPs) %>% group_by(Year, asylumCountry) %>% summarise(IDPs = sum(IDPs, na.rm = TRUE)) %>% arrange(desc(IDPs)) %>% slice_head(n = 5) %>% mutate(Year = ifelse(Year == 2023, "mid-2023", Year))

idp_asr2022_mysr2023 <- rbind(idp_asr2022_asia, idp_mysr2023_asia)

ggplot(idp_asr2022_mysr2023) +
  geom_col(aes(x = IDPs, 
               y = fct_rev(reorder(asylumCountry, -IDPs)), 
               fill = as.character(Year)), 
           position = position_dodge(0.7), width = 0.6)+
  geom_text(aes(
    x = IDPs,
    y = fct_rev(reorder(asylumCountry, -IDPs)),
    group = as.character(Year),
    label = scales::comma(round(IDPs,-2))),
    position = position_dodge(width = 0.7),
    hjust = -0.05, size = 6.5) +
  scale_fill_unhcr_d(palette = "pal_unhcr") +
  labs(title = "Countries with the most conflict-induced IDPs in Asia-Pacific | 2022 - mid-2023",
       caption = "Source: UNHCR Refugee Data Finder\n© UNHCR, The UN Refugee Agency") +
  scale_x_continuous(labels = scales::comma, expand = expansion(c(0, 0.1))) +
  scale_y_discrete(labels = scales::label_wrap(17)) +
  theme_unhcr(grid = FALSE, axis = "y", axis_title = FALSE, axis_text = "y") + theme(text = element_text(size = 25))
```

The newly displaced IDPs during the first half of 2023 were in Myanmar (443,000) and the Philippines (80,000).
:::
:::

# Section

## Lists

-   To add bullet points to a slide, use the Markdown list syntax.
-   Works the same way with numbered lists. For example:

```{markdown}
#| echo: true
#| eval: false

- Item 1
    - Item 1.1
    - Item 1.2
- Item 2
- Item 3
```

## Incremental list

-   By default the lists are **not** incremental.
-   Add the `{.incremental}` class, so each bullet will appear separately.

```{markdown}
#| echo: true
#| eval: false

::: {.incremental}
- Item 1
- Item 2
:::
```

::: incremental
-   This is the 1<sup>st</sup> incremental bullet.
-   And here the 2<sup>nd</sup>.
:::

::: aside
Include `incremental:true` in the YAML to set it globally.
:::

## Incremental content

-   Use `. . .` to separate content and turn it incremental.
-   Any content can be incremental. For example:

```{markdown}
#| echo: true
#| eval: false

This will appear first

. . .

And then that!
```

## UNHCR helpers

**Text**

-   Use `{.text-blue}` to apply [UNHCR blue]{.text-blue} color
-   Use `{.text-grey}` for [lighter text]{.text-grey} color

**Background**

-   Use `{.bg-blue}` for [light blue]{.bg-blue} background
-   Use `{.bg-grey}` for [light grey]{.bg-grey} background

::: aside
For dark background slides use `{.text-yellow}` and `{.bg-yellow}` classes
:::

## Columns

-   To create columns, use a `div` container with class `{.columns}`, containing two or more `div` containers with class `{.column}` and a `width` attribute. For example:

```{markdown}
#| echo: true

:::: {.columns}

::: {.column width="40%"}
Left column
:::

::: {.column width="60%"}
Right column
:::

::::
```

## Images

-   To insert an image, use the Markdown image syntax. For example:

```{markdown}
#| echo: true
![](path/to/image.jpg)
```

![](https://raw.githubusercontent.com/vidonne/unhcrdown/master/inst/resources/img/cover-example.jpg)

## Code

-   To include code, use fenced code blocks with a language specifier.
-   By default the `echo` parameter of code block is set to `false`, turn it to `true` to see the code and the result.

```{markdown}
#| echo: true

\```{r}
#| echo: true
#| warning: false
#| remotes::install_github("vidonne/unhcrthemes")
library(tidyverse)
library(unhcrthemes)
\```

```

## Plots

-   Use the [`{unhcrthemes}`](https://vidonne.github.io/unhcrthemes/) package to produce UNHCR branded plots directly in the presentation. For example:

```{r}
#| label: idp-plot
#| fig-align: center

library(tidyverse)
library(unhcrthemes)

data(idp, package = "unhcrthemes")

idp_total <- idp |>
  group_by(year) |>
  summarise(idp = sum(idp, na.rm = TRUE) / 1e6) |>
  ungroup()

ggplot(idp_total) +
  geom_col(aes(x = year, y = idp),
           fill = unhcr_pal(n = 1, "pal_blue"),
           width = 0.8) +
  labs(title = "Globalement IDP displacement | 2010 - 2019",
       y = "Number of people (in million)",
       caption = "Source: UNHCR Refugee Data Finder") +
  scale_y_continuous(expand = expansion(c(0, 0.1))) +
  scale_x_continuous(breaks = seq(2010, 2019, 1)) +
  theme_unhcr(font_size = 18, grid = "Y", axis_title = "y")
```

## Tables

-   Use `knitr::kable()` function for simple table. For example:

::: columns
::: {.column width="55%"}
```{r}
#| label: kable-ex
#| echo: true
#| eval: false
knitr::kable(head(idp_total)) 
```
:::

::: {.column width="45%"}
```{r}
#| label: kable-ex
#| eval: true
```
:::
:::

## More tables

-   Many packages can help you stylize tables, like `{gt}`, `{dt}` and more.
-   Use them to customize further the table design in your presentations.

::: columns
::: {.column width="50%"}
```{r}
#| label: gt-ex
#| echo: true
#| eval: false
gt::gt(head(idp_total)) 
```
:::

::: {.column width="50%"}
```{r}
#| label: gt-ex
#| eval: true
```
:::
:::

## Speaker Notes:

-   You can add speaker notes to your slides that are only visible to the presenter during the presentation.
-   To add speaker notes, use the following syntax:

```{markdown}
#| echo: true

## Slide with speaker notes

Slide content

::: {.notes}
Speaker notes go here.
:::

```

## Exporting into PDF

-   Toggle into Print View using the `E` key (or using the [Navigation Menu](https://quarto.org/docs/presentations/revealjs/presenting.html#navigation-menu)).
-   Open the in-browser print dialog (CTRL/CMD+P).
-   Change the destination setting to **Save as PDF**.
-   Find more info on the print to PDF settings [here](https://quarto.org/docs/presentations/revealjs/presenting.html#print-to-pdf).

## More Information

You can learn more about controlling the appearance and layout of RevealJS output here: <https://quarto.org/docs/presentations/revealjs/>

# Thank you {.slide-blue}

Enjoy the template! 67
